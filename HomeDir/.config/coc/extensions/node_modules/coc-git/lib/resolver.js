"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const coc_nvim_1 = require("coc.nvim");
const path_1 = tslib_1.__importDefault(require("path"));
const util_1 = require("./util");
class Resolver {
    constructor() {
        this.resolvedRoots = new Set();
    }
    getGitRoot(fullpath) {
        for (let p of this.resolvedRoots) {
            if (fullpath.toLowerCase().startsWith(p.toLowerCase()))
                return p;
        }
        return null;
    }
    getRootOfDocument(document) {
        if (document.schema != 'file' || document.buftype != '')
            return null;
        return this.getGitRoot(coc_nvim_1.Uri.parse(document.uri).fsPath);
    }
    resolveGitRoot(doc) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            let dir;
            if (!doc || doc.buftype != '' || doc.schema != 'file') {
                dir = coc_nvim_1.workspace.cwd;
            }
            else {
                let u = coc_nvim_1.Uri.parse(doc.uri);
                dir = path_1.default.dirname(u.fsPath);
            }
            let root = this.getGitRoot(dir);
            if (root)
                return root;
            try {
                let res = yield util_1.runCommand('git rev-parse --show-toplevel', { cwd: dir });
                if (path_1.default.isAbsolute(res.trim())) {
                    this.resolvedRoots.add(res.trim());
                    return res.trim();
                }
            }
            catch (e) {
                return;
            }
        });
    }
}
exports.default = Resolver;
//# sourceMappingURL=resolver.js.map